name: Test

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        attempt: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Fetch latest release of Kafka && extract it
        run: |
          wget --progress=dot:giga https://media.githubusercontent.com/media/codecrafters-io/build-your-own-kafka/main/kafka_2.13-4.0.0-SNAPSHOT.tgz
          tar -xzf kafka_2.13-4.0.0-SNAPSHOT.tgz
          sudo mv kafka_2.13-4.0.0-SNAPSHOT/ /usr/local/kafka-latest
          export PATH=$PATH:/usr/local/kafka-latest/bin

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - name: Run tests
        run: make test

      - if: always()
        run: |
          # List files in /dev/shm directory that start with "test-"
          echo "Files in /dev/shm:"
          ls -la /dev/shm | grep "test-"
          echo ""
          latest_file=$(ls /dev/shm/test-* | sort | tail -n1)
          echo "Latest file: $latest_file"

          # Check if a file was found
          if [ -n "$latest_file" ]; then
              # Print the size of the file
              echo "File size: $(du -h "$latest_file" | cut -f1)"
              echo ""

              # Print the contents of the file
              echo ""
              echo "--- BASE64 ---"
              echo ""
              cat "$latest_file" | base64
              echo ""
              echo "--- RAW ---"
              echo ""
              cat "$latest_file"
          else
              echo "No test file found in /dev/shm directory"
          fi

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.22.x

      - uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: "2024.1"
          install-go: false
